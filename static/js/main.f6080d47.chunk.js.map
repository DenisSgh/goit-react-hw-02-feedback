{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","list","map","option","type","button","onClick","toUpperCase","slice","shortid","generate","Notification","message","defaultProps","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","totalFeedback","positiveFeedback","item","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,mBCAzDD,EAAOC,QAAU,CAAC,QAAU,gC,8KCabC,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBC2BQI,EA5BS,SAAC,GAAyC,IAAvCL,EAAsC,EAAtCA,MAAOM,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,cAAC,EAAD,CAASP,MAAOA,EAAhB,SACE,oBAAIE,UAAWC,IAAEK,KAAjB,SACGF,EAAQG,KAAI,SAAAC,GACX,OACE,6BACE,wBACEC,KAAK,SACLT,UAAWC,IAAES,OACbC,QAAS,kBAAMN,EAAgBG,IAHjC,SAKGA,EAAO,GAAGI,cAAgBJ,EAAOK,MAAM,MANnCC,IAAQC,oB,iBCTvBC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGjB,UAAWC,IAAEgB,QAAhB,SAA0BA,KAGnCD,EAAaE,aAAe,CAC1BD,QAAS,qBAOID,Q,gBC6BAG,EArCI,SAAC,GAOb,IANLrB,EAMI,EANJA,MACAsB,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,2BAEMC,EAAgBF,EAAMH,EAAMC,EAASC,GACrCI,EAAmBF,EAA2BJ,EAAMC,EAASC,GAEnE,OACE,cAAC,EAAD,CAASxB,MAAOA,EAAhB,SACGyB,EAAMH,EAAMC,EAASC,GAAO,EAC3B,qBAAItB,UAAWC,IAAEK,KAAjB,UACE,qBAAIN,UAAWC,IAAE0B,KAAjB,mBAA8BP,KAC9B,qBAAIpB,UAAWC,IAAE0B,KAAjB,sBAAiCN,KACjC,qBAAIrB,UAAWC,IAAE0B,KAAjB,kBAA6BL,KAC7B,qBAAItB,UAAWC,IAAE0B,KAAjB,oBAA+BF,KAC/B,qBAAIzB,UAAWC,IAAE0B,KAAjB,gCAA2CD,QAG7C,cAAC,EAAD,OCoBOE,E,4MA3CbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,mBAAqB,SAACV,EAAMC,EAASC,GACnC,OAAOF,EAAOC,EAAUC,G,EAG1BS,gCAAkC,SAACX,EAAMC,EAASC,GAChD,OAAOU,KAAKC,MAAM,MAAQb,EAAOC,EAAUC,GAAOF,IAAS,K,EAG7Df,gBAAkB,SAAAG,GAChB,EAAK0B,UAAS,SAAAC,GACZ,OAAO,eAAG3B,EAAS2B,EAAU3B,GAAU,O,4CAI3C,WACE,MAA+B4B,KAAKP,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CACExB,MAAM,wBACNM,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB+B,KAAK/B,kBAExB,cAAC,EAAD,CACEP,MAAM,aACNsB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKN,mBACZN,2BAA4BY,KAAKL,yC,GArCzBM,a,YCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B/C,EAAOC,QAAU,CAAC,MAAQ,yB,kBCA1BD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,mC","file":"static/js/main.f6080d47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__k10wk\",\"item\":\"Statistics_item__QPVnF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1cmLx\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = { title: PropTypes.string.isRequired };\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport Section from '../Section';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ title, options, onLeaveFeedback }) => {\r\n  return (\r\n    <Section title={title}>\r\n      <ul className={s.list}>\r\n        {options.map(option => {\r\n          return (\r\n            <li key={shortid.generate()}>\r\n              <button\r\n                type=\"button\"\r\n                className={s.button}\r\n                onClick={() => onLeaveFeedback(option)}\r\n              >\r\n                {option[0].toUpperCase() + option.slice(1)}\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Section>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.message}>{message}</p>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: 'No feedback given',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification';\r\n\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({\r\n  title,\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positiveFeedbackPercentage,\r\n}) => {\r\n  const totalFeedback = total(good, neutral, bad);\r\n  const positiveFeedback = positiveFeedbackPercentage(good, neutral, bad);\r\n\r\n  return (\r\n    <Section title={title}>\r\n      {total(good, neutral, bad) > 0 ? (\r\n        <ul className={s.list}>\r\n          <li className={s.item}>Good: {good}</li>\r\n          <li className={s.item}>Neutral: {neutral}</li>\r\n          <li className={s.item}>Bad: {bad}</li>\r\n          <li className={s.item}>Total: {totalFeedback}</li>\r\n          <li className={s.item}>Positive feedback: {positiveFeedback}</li>\r\n        </ul>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positiveFeedbackPercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\n\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Statistics from 'components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = (good, neutral, bad) => {\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = (good, neutral, bad) => {\n    return Math.round(100 / ((good + neutral + bad) / good)) + '%';\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <FeedbackOptions\n          title=\"Please leave feedback\"\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n        <Statistics\n          title=\"Statistics\"\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback}\n          positiveFeedbackPercentage={this.countPositiveFeedbackPercentage}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1xh3G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__3J8n8\",\"button\":\"FeedbackOptions_button__wXDF6\"};"],"sourceRoot":""}